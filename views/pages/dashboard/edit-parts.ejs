<div class="container-fluid" id="edit-parts" v-cloak >
    <div v-if="(templatesList.length > 0)">
      <div class="row">
        <div class="col">
          <h1 class="text-center">Edit Parts</h1>
          <p class="text-center">Select a template to add parts</p>
        </div>
      </div>

      <div class="row">
        <div class="col justify-content-center" style="display:flex;">
          <select v-model="selectedTemplateIndex">
            <option disabled value="">Please select one</option>
            <option v-for="(template, templateIndex) in templatesList" v-bind:key="templateIndex" v-bind:value="templateIndex" >{{template.templateName}}</option>
          </select>
        </div>
      </div>
    
    
      
      <div class="row ">
        <div class="col-10 offset-1 template-body">  

          <div class="row">
            <div class="col">
              <h1 class="text-center">{{ templatesList[selectedTemplateIndex].templateName }}</h1>
              <p class="text-center">File: "{{ templatesList[selectedTemplateIndex].meshFileName }}"</p>
            </div>
          </div>
          <div class="row">
            <div class="col-10 offset-1  template-list-item" v-for="(slot, slotIndex) in templatesList[selectedTemplateIndex].slots" v-bind:value="slotIndex">
              <div class="row slot-header">
                
                <div class="col-3">
                  <div class="row">
                    <span class="col text-center">ID</span>
                  </div>
                  <div class="row">
                    <h2 class="col text-center">#{{slot.id}}</h2>
                  </div>
                </div>

                
                <div class="col-3">
                  <div class="row">
                    <span class="col text-center">Stack Position</span>
                  </div>
                  <div class="row">
                    <h2 class="col text-center">#{{slot.stackPosition}}</h2>
                  </div>
                </div>

                <div class="col-3">
                  <div class="row">
                    <span class="col text-center">Non Line Item</span>
                  </div>
                  <div class="row">
                    <h2 class="col text-center">{{slot.nonLineItem}}</h2>
                  </div>
                </div>

                <div class="col">
                  <div class="row">
                    <span class="col text-center">Slot Name</span>
                  </div>
                  <div class="row">
                    <h3 class="col text-center">{{slot.slotName}}</h3>
                  </div>
                </div>


              </div>

              <div class="row slot-add-parts-area under-buffer">
                <div class="col-6">
                  
                  <div class="row under-buffer">
                    <div class="col">
                      <span>Display Name</span>
                      <input class="form-control" type="text" name="displayName"  v-model="displayName[slotIndex]" placeholder="Display Name">
                    </div>
                  </div>

                  <div class="row under-buffer">
                    <div class="col">
                      <span>Mesh Name (exact)</span>
                      <input class="form-control" type="text" name="meshName" v-model="meshName[slotIndex]" placeholder="Mesh Name (exact)">
                    </div>
                  </div>

                  <div class="row under-buffer">
                    <div class="col">
                      <span>Part Code</span>
                      <input class="form-control" type="text" name="part-code" v-model="partCode[slotIndex]" placeholder="XXX">
                    </div>
                  </div>
            
                </div>

                <div class="col-6">
                  
                  <div class="row under-buffer">
                    <div class="col">
                      <span>Part Description</span>
                      <input class="form-control" type="text" name="part-description" v-model="partDescription[slotIndex]" placeholder="Standard Pedestal">
                    </div>
                  </div>

                  <div class="row">
                    <div class="col">
                      <span>Down Stream Offset</span>
                    </div>
                  </div>
                  
                  <div class="row under-buffer">
                    
                    <div class="col">
                      <input class="form-control" type="text" name="x-offset" v-model="xOffset[slotIndex]" placeholder="X">
                    </div>
                    <div class="col">
                      <input class="form-control" type="text" name="y-offset" v-model="yOffset[slotIndex]" placeholder="Y">
                    </div>
                    <div class="col">
                      <input class="form-control" type="text" name="z-offset" v-model="zOffset[slotIndex]" placeholder="Z">
                    </div>

                  </div>

                  <div class="row under-buffer" v-if="(slotIndex>0)">
                    <div class="col-5">
                      <input type="checkbox" id="is-alias" v-model="isAlias[slotIndex]">
                      <label style="cursor:pointer" for="is-alias">is part alias </label>
                    </div>
                    <div class="col-7" v-if="isAlias[slotIndex]">
                      <input class="form-control" type="text" name="aliasRefName" v-model="aliasRefName[slotIndex]" placeholder="Alias Ref. Name">
                    </div>
                  </div>
                  <!-- PARTS CAN BE ALIAS OF ANY SLOT SIBLING PART -->
                  <div class="row under-buffer" v-if="isAlias[slotIndex]" >
                   
                    <div class="col-5">
                      <span>alias of part:</span>
                    </div>
                   
                    <div class="col-7">
                     
                      <select v-model="aliasOfPartID[slotIndex]">
                        <option disabled value="">Please select one</option>
                        <option v-for="(slotSiblingPart, slotSiblingIndex) in templatesList[selectedTemplateIndex].slots[slotIndex].parts" v-bind:key="slotSiblingIndex" v-bind:value="slotSiblingPart.id" >{{slotSiblingPart.friendlyName}}</option>
                      </select>

                    </div>

                  </div>

                  <!--ALIAS WILL BE SUBSTITUTED WHEN A SLOT FURTHER DOWN THE STACK...-->
                  <div class="row under-buffer" v-if="isAlias[slotIndex]" >
                    
                    <div class="col-5">
                      <span>used if:</span>
                    </div>

                    <div class="col-7">

                      <select v-model="useAliasWhenSlot[slotIndex]" @change="updateUsedIfSlot(useAliasWhenSlot[slotIndex].id)">
                        <option disabled value="">Please select one</option>
                        <option v-for="(aliasWhenSlot, aliasWhenSlotIndex) in templatesList[selectedTemplateIndex].slots" v-if="(aliasWhenSlotIndex<slotIndex)" v-bind:key="aliasWhenSlotIndex" v-bind:value="{id : aliasWhenSlot.id, slotName : aliasWhenSlot.slotName}" >{{aliasWhenSlot.slotName}}</option>
                      </select>

                    </div>

                  </div>

                  <!--...HAS ACTIVE PART WITH ID-->
                  <div class="row under-buffer" v-if="(useAliasWhenSlot[slotIndex]!=undefined)" >
                   
                    <div class="col-5">
                      <span>has part:</span>
                    </div>

                    <div class="col-7">

                      <select v-model="whenSlotHasPartID[slotIndex]" >
                        <option disabled value="">Please select one</option>
                        <option v-for="(refSlotPart, refSlotPartIndex) in templatesList[selectedTemplateIndex].slots[AliasPartSlotIndex].parts" v-bind:key="refSlotPartIndex" v-bind:value="{id : refSlotPart.id, friendlyName : refSlotPart.friendlyName}" >{{refSlotPart.friendlyName}}</option>
                      </select>
                     
                    </div>

                  </div>
                  
                  <div v-if="(slotIndex>0)">
                    <ajax-button @click="addAliasTrunk(slotIndex)" class="btn btn-success" >Add Alias Trunk</ajax-button>
                    <ajax-button v-if="!viewTrunksAtSlot[slotIndex]" @click="showTrunksAtSlot(slotIndex)" class="btn btn-primary" > Show Trunks</ajax-button>
                    <ajax-button v-if="viewTrunksAtSlot[slotIndex]" @click="hideTrunksAtSlot(slotIndex)" class="btn btn-warning" > Hide Trunks</ajax-button>
                  </div>

                  <div v-if="viewTrunksAtSlot[slotIndex]" class="new-trunk" v-for="(trunk, trunkIndex) in partAliasTrunks[slotIndex]">
                    <h5 class="text-center">ALIAS TRUNK # {{trunkIndex+1}}</h5>
                    <div><div>Slot ID: {{trunk.slot.id}} </div><div>Slot Name: {{trunk.slot.slotName}}</div></div>
                    <div><div>Has Part ID: {{trunk.part.id}} </div><div>Has Part: {{trunk.part.friendlyName}}</div></div>
                  </div>
                  
                </div>
              </div>
              
              <div class="row under-buffer">
                <div v-if="!editPartAtSlot[slotIndex]" class="col">
                  <button class="btn btn-success wide-submit" @click="createPart(slotIndex)">Add Part</button>
                </div>
                <div v-else class="col">
                  <button class="btn btn-danger wide-submit" @click="cancelEdit(slotIndex)">CANCEL EDIT</button>
                  <button class="btn btn-success wide-submit" @click="saveEdit(slotIndex, editPartAtSlotID[slotIndex])">SAVE EDIT</button>
                </div>
                            
              </div>
              
              <div class="row">
                <div class="col">

                  <table style="width:100%; background-color: rgb(249, 255, 255);">
                    <tr style="background-color: rgb(206, 206, 206);">
                      <th>ID</th>
                      <th>Display Name</th>
                      <th>Mesh Name</th>
                      <th>X-offset</th>
                      <th>Y-offset</th>
                      <th>Z-offset</th>
                      <th>Is Alias</th>
                      <th>Alias Ref.</th>
                      <th>Alias of</th>
                      <th></th>
                      <th></th>
                    </tr>
                    <tr v-for="(displayPart, displayPartIndex) in templatesList[selectedTemplateIndex].slots[slotIndex].parts">
                      <td>{{displayPart.id}}</td>
                      <td>{{displayPart.friendlyName}}</td>
                      <td>{{displayPart.meshName}}</td>
                      <td>{{displayPart.downstreamXOffset}}</td>
                      <td>{{displayPart.downstreamYOffset}}</td>
                      <td>{{displayPart.downstreamZOffset}}</td>
                      <td>{{displayPart.isAliasPart}}</td>
                      <td v-if="displayPart.isAliasPart">{{displayPart.aliasRefName}}</td> <td v-else>N/A</td>
                      <td v-if="displayPart.isAliasPart">{{displayPart.aliasOfPartID}}</td> <td v-else>N/A</td>
                      <td><button class="btn btn-danger" @click="deletePart(displayPart.id, slotIndex)">DELETE</button> </td>
                      <td><button class="btn btn-warning" @click="editPart(displayPartIndex, slotIndex)">EDIT</button></td>
                    </tr>

                    
                  </table>

                </div>
  
              </div>
                  
            </div>
          </div>

        </div>
      </div>
    </div>
   
    <div v-else>
      Please create a template on the templates page.
    </div>
   
  
  <!--
  <pre style="color:cornsilk;">
    {{templatesList[selectedTemplateIndex]}}
  </pre>
    -->

</div>

<%- /* Expose server-rendered data as window.SAILS_LOCALS :: */ exposeLocalsToBrowser() %>
